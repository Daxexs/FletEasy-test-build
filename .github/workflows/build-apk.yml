name: Web Build + Deployment to GitHub Pages

on:
  # Runs on push to any of the below branches
  push:
    branches:
      - master
      - main
  # Runs on pull request events that target one of the below branches
  pull_request:
    branches:
      - master
      - main

  # Allows you to run this workflow manually from the Actions tab of the repository
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  # https://flet.dev/docs/publish#versioning
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.12
  FLET_VERSION: 0.28.3
  FLET_EASY_VERSION: 0.3.0.dev17
  MODULE_NAME: witch-main.py
  MODULE_NAME_2: witchout-main.py

jobs:
  build-apk-flet-v0_28_3:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-suffix: "optional-suffix"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Python ${{ env.PYTHON_VERSION }} with uv
        run: uv python install ${{ env.PYTHON_VERSION }}

      - name: sync uv environment
        run: uv sync --all-groups --all-extras

      - name: establecer versi√≥n de flet y flet-easy desde variables
        run: |
          sed -i "s/flet==.*\"/flet==${FLET_VERSION}\"/" tests/cache-pages/pyproject.toml
          sed -i "s/flet-easy==.*\"/flet-easy==${FLET_EASY_VERSION}\"/" tests/cache-pages/pyproject.toml
          sed -i "s/module = \".*\"/module = \"${MODULE_NAME}\"/" tests/cache-pages/pyproject.toml
          sed -i "s/module_2 = \".*\"/module_2 = \"${MODULE_NAME_2}\"/" tests/cache-pages/pyproject.toml

      - name: Flet Build apk
        run: |
          source .venv/bin/activate
          cd tests/cache-pages
          flet build apk --verbose --build-number=${{env.BUILD_NUMBER}} --build-version=${{env.BUILD_VERSION}}

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk-build-v0.28.3-v0.3.0.dev17
          path: tests/cache-pages/build/apk/app-release.apk
          if-no-files-found: warn
          overwrite: false

  build-apk-flet-v0_27_6:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-suffix: "optional-suffix"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Python ${{ env.PYTHON_VERSION }} with uv
        run: uv python install ${{ env.PYTHON_VERSION }}

      - name: sync uv environment
        run: uv sync --all-groups --all-extras

      - name: update flet-cli 0.27.6
        run: |
          uv add flet[all]==0.27.6 -U

      - name: set flet and flet 0.27.6 version from variables
        run: |
          sed -i "s/flet==.*\"/flet==0.27.6\"/" tests/cache-pages/pyproject.toml

      - name: set flet-easy ${{env.FLET_EASY_VERSION}} version from variables
        run: |
          sed -i "s/flet-easy==.*\"/flet-easy==${FLET_EASY_VERSION}\"/" tests/cache-pages/pyproject.toml

      - name: set module name from variables
        run: |
          sed -i "s/module = \".*\"/module = \"${MODULE_NAME}\"/" tests/cache-pages/pyproject.toml
          sed -i "s/module_2 = \".*\"/module_2 = \"${MODULE_NAME_2}\"/" tests/cache-pages/pyproject.toml

      - name: Flet Build apk
        run: |
          source .venv/bin/activate
          cd tests/cache-pages
          flet build apk --verbose --build-number=${{env.BUILD_NUMBER}} --build-version=${{env.BUILD_VERSION}}

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk-build-v0.28.3-v0.3.0.dev17
          path: tests/cache-pages/build/apk/app-release.apk
          if-no-files-found: warn
          overwrite: false
